<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://activemq.apache.org/schema/core
       http://activemq.apache.org/schema/core/activemq-core.xsd">

    <!-- ActiveMQ Broker -->
    <broker brokerName="demo" xmlns="http://activemq.apache.org/schema/core">
        <destinationPolicy>
            <policyMap>
                <policyEntries>
                    <policyEntry queue=">">
						<deadLetterStrategy>
				            <!--
				              Use the prefix 'DLQ.' for the destination name, and make
				              the DLQ a queue rather than a topic
				            -->
				            <individualDeadLetterStrategy queuePrefix="DLQ." useQueueForQueueMessages="true" />
				        </deadLetterStrategy>
                    </policyEntry>
                </policyEntries>
            </policyMap>
        </destinationPolicy>

        <plugins>
            <!--  use JAAS to authenticate using the login.config file on the classpath to configure JAAS -->
  			<jaasAuthenticationPlugin configuration="LDAPLogin" />

  			<!-- 
            <authorizationPlugin>
                <map>
                    <cachedLDAPAuthorizationMap
                            connectionURL="ldap://localhost:33389"
                            queueSearchBase="ou=Queue,ou=Destination,ou=ActiveMQ,ou=system"
                            topicSearchBase="ou=Topic,ou=Destination,ou=ActiveMQ,ou=system"
                            tempSearchBase="ou=Temp,ou=Destination,ou=ActiveMQ,ou=system"
                            adminPermissionGroupSearchFilter="(cn=admin)"
                            writePermissionGroupSearchFilter="(cn=write)"
                            readPermissionGroupSearchFilter="(cn=read)"
                            legacyGroupMapping="true"
                    />
                </map>
            </authorizationPlugin>  			      
			-->
			
  			<authorizationPlugin>
			    <map>
			        <!-- 
			        <cachedLDAPAuthorizationMap
			            connectionURL="ldap://localhost:33389"
						queueSearchBase="ou=Queue,ou=Destination,ou=ActiveMQ,ou=system"
						topicSearchBase="ou=Topic,ou=Destination,ou=ActiveMQ,ou=system"
						tempSearchBase="ou=Temp,ou=Destination,ou=ActiveMQ,ou=system"
						adminPermissionGroupSearchFilter="(cn=admin)"
						writePermissionGroupSearchFilter="(cn=write)"
						readPermissionGroupSearchFilter="(cn=read)"
						legacyGroupMapping="true"
						groupClass="org.apache.karaf.jaas.boot.principal.RolePrincipal"
			        />
			        -->
			        <authorizationMap groupClass="org.apache.karaf.jaas.boot.principal.RolePrincipal">
		                <authorizationEntries>		
		                  <authorizationEntry queue=">" read="admin" write="admin" admin="admin"/>
		                  <authorizationEntry topic=">" read="admin" write="admin" admin="admin"/>
		                  <authorizationEntry topic="ActiveMQ.Advisory.>" read="admin" write="admin" admin="admin"/>
		                </authorizationEntries>
		              </authorizationMap> 
			    </map>
			</authorizationPlugin>
			
			<!--  lets configure a destination based authorization mechanism -->
			<!-- 
		      <authorizationPlugin>
		        <map>
		          <authorizationMap>
		            <authorizationEntries>
		              <authorizationEntry queue=">" read="admins" write="admins" admin="admins" />
		              <authorizationEntry queue="USERS.>" read="users" write="users" admin="users" />
		              <authorizationEntry queue="GUEST.>" read="guests" write="guests,users" admin="guests,users" />
		              
		              <authorizationEntry topic=">" read="admins" write="admins" admin="admins" />
		              <authorizationEntry topic="USERS.>" read="users" write="users" admin="users" />
		              <authorizationEntry topic="GUEST.>" read="guests" write="guests,users" admin="guests,users" />
		              
		              <authorizationEntry topic="ActiveMQ.Advisory.>" read="guests,users" write="guests,users" admin="guests,users"/>
		            </authorizationEntries>
		            
		            <tempDestinationAuthorizationEntry>  
		              <tempDestinationAuthorizationEntry read="tempDestinationAdmins" write="tempDestinationAdmins" admin="tempDestinationAdmins"/>
		           </tempDestinationAuthorizationEntry>               
		          </authorizationMap>
		        </map>
		      </authorizationPlugin>		
		    -->  
  		</plugins>

        <transportConnectors>
            <transportConnector name="tcp" uri="tcp://localhost:61616"/>
        </transportConnectors>
    </broker>
</beans>